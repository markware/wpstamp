/*! Instajam - v2.0.0 - 2013-11-03
* http://github.com/mikefowler/instajam/
* Copyright (c) 2013 Mike Fowler; Licensed MIT */
!function(a){"use strict";function b(a,b){var c=new RegExp("(?:&|#)"+a+"=([a-z0-9._-]+)","i"),d=window.location.hash.match(c);if(d){if(b){var e=new RegExp("(?:&|#)"+a+"="+d[1],"i");window.location.hash=window.location.hash.replace(e,"")}return d[1]}return!1}function c(a){var b="https://api.instagram.com/v1/",c="instajam"+Math.round((new Date).getTime()/1e3)+Math.floor(100*Math.random());a=a||{},a.data=a.data||{},a.data.access_token=localStorage.getItem("instagram_access_token"),a.data.callback=c;var f=d(a.data);if(!a.url)throw new e("Instajam:: Missing request URL");a.url=b+a.url+"?"+f,window[c]=function(b){"function"==typeof a.success&&a.success(b),g.parentNode.removeChild(g),delete window[c]};var g=document.createElement("script");g.type="text/javascript",g.src=a.url,document.getElementsByTagName("body")[0].appendChild(g)}function d(a){var b=[];for(var c in a)b.push(encodeURIComponent(c)+"="+encodeURIComponent(a[c]));return b.join("&")}function e(a){this.name="InstajamError",this.message=a||""}a.init=function(a){if(a=a||{},!a.clientId||!a.redirectUri)throw new e("Client ID and Redirect URI are required.");return this.scope=a.scope&&"object"==typeof a.scope?"&scope="+a.scope.join("+"):"&scope=basic",this.authUrl="https://instagram.com/oauth/authorize/?client_id="+a.clientId+"&redirect_uri="+a.redirectUri+"&response_type=token"+(this.scope||""),this.authenticate(),this},a.authenticate=function(){localStorage.getItem("instagram_access_token")?this.authenticated=!0:b("access_token")?(localStorage.setItem("instagram_access_token",b("access_token",!0)),this.authenticated=!0):this.authenticated=!1},a.deauthenticate=function(){localStorage.removeItem("instagram_access_token"),this.authenticated=!1};var f=function(){},g=function(){};f.prototype.self=new g,g.prototype.profile=function(a){c({url:"users/self",success:a})},g.prototype.media=function(a,b){"function"==typeof a&&(b=a,a=null),c({url:"users/self/media/recent",data:a,success:b})},g.prototype.feed=function(a,b){"function"==typeof a&&(b=a,a=null),c({url:"users/self/feed",data:a,success:b})},g.prototype.favorites=function(a,b){"function"==typeof a&&(b=a,a=null),c({url:"users/self/media/liked",data:a,success:b})},f.prototype.requests=function(a){c({url:"users/self/requested-by",success:a})},f.prototype.relationshipWith=function(a,b){c({url:"users/"+a+"/relationship",success:b})},f.prototype.get=function(a,b){if(!a)throw new e("A user's ID or username is required for user.get()");"number"==typeof a?c({url:"users/"+a,success:b}):"string"==typeof a&&f.prototype.search.call(this,a,{},function(a){a=a.data&&1===a.data.length?a.data[0]:!1,"function"==typeof b&&b(a)})},f.prototype.media=function(a,b,d){if(!a)throw new e("A user's ID or username is required for user.media()");"function"!=typeof b||d||(d=b,b=null),"number"==typeof a?c({url:"users/"+a+"/media/recent",data:b,success:d}):"string"==typeof a&&f.prototype.search.call(this,a,{},function(a){a=a.data&&a.data.length>0?a.data[0]:!1,a?c({url:"users/"+a.id+"/media/recent",data:b,success:d}):"function"==typeof d&&d(a)})},f.prototype.search=function(a,b,d){if(!a)throw new e("A search term is required for user.search()");"function"==typeof b&&(d=b,b={}),b.q=a,c({url:"users/search",data:b,success:d})},f.prototype.follows=function(a,b){c({url:"users/"+a+"/follows",success:b})},f.prototype.following=function(a,b){c({url:"users/"+a+"/followed-by",success:b})};var h=function(){};h.prototype.get=function(a,b){c({url:"media/"+a,success:b})},h.prototype.search=function(a,b){if(a=a||{},!a.lat||!a.lng)throw new e("A latitude AND a longitude are required for media.search()");c({url:"media/search",data:a,success:b})},h.prototype.popular=function(a){c({url:"media/popular",success:a})},h.prototype.comments=function(a,b){if(!a)throw new e("A media ID is required for media.comments()");c({url:"media/"+a+"/comments",success:b})},h.prototype.likes=function(a,b){if(!a)throw new e("A media ID is required for media.likes()");c({url:"media/"+a+"/likes",success:b})};var i=function(){};i.prototype.get=function(a,b){if(!a)throw new e("A tag name is required for tag.get()");c({url:"tags/"+a,success:b})},i.prototype.media=function(a,b,d){if(!a)throw new e("A tag name is required for tag.media()");"function"!=typeof b||d||(d=b,b={}),c({url:"tags/"+a+"/media/recent",data:b,success:d})},i.prototype.search=function(a,b){if(!a)throw new e("A tag name is required for tag.search()");var d={q:a};c({url:"/tags/search",data:d,success:b})};var j=function(){};j.prototype.get=function(a,b){if(!a)throw new e("An ID is required for location.get()");c({url:"locations/"+a,success:b})},j.prototype.media=function(a,b,d){if(!a)throw new e("An ID is required for location.get()");"function"!=typeof b||d||(d=b,b={}),c({url:"locations/"+a+"/media/recent",success:d})},j.prototype.search=function(a,b){if(a=a||{},!(a.lat&&a.lng||a.foursquare_v2_id))throw new e("A latitude and longitude OR a Foursquare place ID is required for location.search()");c({url:"locations/search",data:a,success:b})};var k=function(){};k.prototype.media=function(a,b,d){if(!a)throw new e("A Geography ID is required for geography.get()");b=b||{},c({url:"geographies/"+a+"/media/recent",data:b,success:d})},e.prototype=Error.prototype,a.user=new f,a.media=new h,a.tag=new i,a.location=new j}(window.Instajam=window.Instajam||{});